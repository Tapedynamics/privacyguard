version: '3.9'

services:
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: privacyguard
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672'
      - '15672:15672'

  minio:
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - '9000:9000'
      - '9001:9001'

  backend:
    build:
      context: ./backend
    restart: always
    command: uvicorn backend.app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - db
      - rabbitmq
      - minio
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/privacyguard
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_ENDPOINT_URL: http://minio:9000
      AWS_USE_SSL: 'false'
      AWS_REGION: us-east-1
      S3_BUCKET: photos
      AWS_REKOGNITION_COLLECTION: privacyguard
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      CELERY_RESULT_BACKEND: rpc://
      DEFAULT_ADMIN_PASSWORD: admin
      POSTGRES_HOST: db
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: privacyguard
    ports:
      - '8000:8000'

  worker:
    build:
      context: ./worker
    restart: always
    depends_on:
      - backend
      - db
      - rabbitmq
      - minio
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/privacyguard
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_ENDPOINT_URL: http://minio:9000
      AWS_USE_SSL: 'false'
      AWS_REGION: us-east-1
      S3_BUCKET: photos
      AWS_REKOGNITION_COLLECTION: privacyguard
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672//
      CELERY_RESULT_BACKEND: rpc://
      POSTGRES_HOST: db
      POSTGRES_PORT: '5432'
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: privacyguard

  frontend:
    build:
      context: ./frontend
    restart: always
    depends_on:
      - backend
    ports:
      - '3000:80'

volumes:
  pgdata:
  minio_data: